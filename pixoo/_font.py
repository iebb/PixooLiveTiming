FONT_CASIO_OFFSET_32 = [
    [0x00, 0x00, 0x00],  # 000: ' ' U+0020 (utf-8: 20)
    [0x00, 0x00, 0x4f, 0x00, 0x00],  # 001: '!' U+0021 (utf-8: 21)
    [0x00, 0x07, 0x00, 0x07, 0x00],  # 002: '"' U+0022 (utf-8: 22)
    [0x14, 0x7f, 0x14, 0x7f, 0x14],  # 003: '#' U+0023 (utf-8: 23)
    [0x24, 0x2a, 0x7f, 0x2a, 0x12],  # 004: '$' U+0024 (utf-8: 24)
    [0x23, 0x13, 0x08, 0x64, 0x62],  # 005: '%' U+0025 (utf-8: 25)
    [0x36, 0x49, 0x56, 0x20, 0x58],  # 006: '&' U+0026 (utf-8: 26)
    [0x00, 0x05, 0x03, 0x00, 0x00],  # 007: ''' U+0027 (utf-8: 27)
    [0x00, 0x1c, 0x22, 0x41, 0x00],  # 008: '(' U+0028 (utf-8: 28)
    [0x00, 0x41, 0x22, 0x1c, 0x00],  # 009: ')' U+0029 (utf-8: 29)
    [0x14, 0x08, 0x3e, 0x08, 0x14],  # 010: '*' U+002a (utf-8: 2a)
    [0x08, 0x1c, 0x08],  # 011: '+' U+002b (utf-8: 2b)
    [0x50],  # 012: ',' U+002c (utf-8: 2c)
    [0x08, 0x08, 0x08],  # 013: '-' U+002d (utf-8: 2d)

    [0x40],  # 014: '.' U+002e (utf-8: 2e)

    [0x20, 0x10, 0x08, 0x04, 0x02],  # 015: '/' U+002f (utf-8: 2f)

    [0x7f, 0x41, 0x7f],  # 016: '0' U+0030 (utf-8: 30)
    [0x00, 0x00, 0x7f],  # 017: '1' U+0031 (utf-8: 31)
    [0x79, 0x49, 0x4f],  # 018: '2' U+0032 (utf-8: 32)
    [0x49, 0x49, 0x7f],  # 019: '3' U+0033 (utf-8: 33)
    [0x0f, 0x08, 0x7f],  # 020: '4' U+0034 (utf-8: 34)
    [0x4f, 0x49, 0x79],  # 021: '5' U+0035 (utf-8: 35)
    [0x7f, 0x49, 0x79],  # 022: '6' U+0036 (utf-8: 36)
    [0x01, 0x01, 0x7f],  # 023: '7' U+0037 (utf-8: 37)
    [0x7f, 0x49, 0x7f],  # 024: '8' U+0038 (utf-8: 38)
    [0x4f, 0x49, 0x7f],  # 025: '9' U+0039 (utf-8: 39)

    [0x00, 0x36],  # 026: ':' U+003a (utf-8: 3a)

    [0x00, 0x56, 0x36, 0x00, 0x00],  # 027: ';' U+003b (utf-8: 3b)
    [0x08, 0x14, 0x22, 0x41, 0x00],  # 028: '<' U+003c (utf-8: 3c)
    [0x14, 0x14, 0x14, 0x14, 0x14],  # 029: '=' U+003d (utf-8: 3d)
    [0x00, 0x41, 0x22, 0x14, 0x08],  # 030: '>' U+003e (utf-8: 3e)
    [0x02, 0x01, 0x51, 0x09, 0x06],  # 031: '?' U+003f (utf-8: 3f)
    [0x32, 0x49, 0x79, 0x41, 0x3e],  # 032: '@' U+0040 (utf-8: 40)
    [0x7e, 0x09, 0x09, 0x09, 0x7e],  # 033: 'A' U+0041 (utf-8: 41)
    [0x7f, 0x49, 0x49, 0x49, 0x36],  # 034: 'B' U+0042 (utf-8: 42)
    [0x3e, 0x41, 0x41, 0x41, 0x22],  # 035: 'C' U+0043 (utf-8: 43)
    [0x7f, 0x41, 0x41, 0x22, 0x1c],  # 036: 'D' U+0044 (utf-8: 44)
    [0x7f, 0x49, 0x49, 0x49, 0x41],  # 037: 'E' U+0045 (utf-8: 45)
    [0x7f, 0x09, 0x09, 0x09, 0x01],  # 038: 'F' U+0046 (utf-8: 46)
    [0x3e, 0x41, 0x41, 0x49, 0x7a],  # 039: 'G' U+0047 (utf-8: 47)
    [0x7f, 0x08, 0x08, 0x08, 0x7f],  # 040: 'H' U+0048 (utf-8: 48)
    [0x00, 0x41, 0x7f, 0x41, 0x00],  # 041: 'I' U+0049 (utf-8: 49)
    [0x20, 0x40, 0x41, 0x3f, 0x01],  # 042: 'J' U+004a (utf-8: 4a)
    [0x7f, 0x08, 0x14, 0x22, 0x41],  # 043: 'K' U+004b (utf-8: 4b)
    [0x7f, 0x40, 0x40, 0x40, 0x40],  # 044: 'L' U+004c (utf-8: 4c)
    [0x7f, 0x02, 0x0c, 0x02, 0x7f],  # 045: 'M' U+004d (utf-8: 4d)
    [0x7f, 0x04, 0x08, 0x10, 0x7f],  # 046: 'N' U+004e (utf-8: 4e)
    [0x3e, 0x41, 0x41, 0x41, 0x3e],  # 047: 'O' U+004f (utf-8: 4f)
    [0x7f, 0x09, 0x09, 0x09, 0x06],  # 048: 'P' U+0050 (utf-8: 50)
    [0x3e, 0x41, 0x51, 0x21, 0x5e],  # 049: 'Q' U+0051 (utf-8: 51)
    [0x7f, 0x09, 0x19, 0x29, 0x46],  # 050: 'R' U+0052 (utf-8: 52)
    [0x26, 0x49, 0x49, 0x49, 0x32],  # 051: 'S' U+0053 (utf-8: 53)
    [0x01, 0x01, 0x7f, 0x01, 0x01],  # 052: 'T' U+0054 (utf-8: 54)
    [0x3f, 0x40, 0x40, 0x40, 0x3f],  # 053: 'U' U+0055 (utf-8: 55)
    [0x1f, 0x20, 0x40, 0x20, 0x1f],  # 054: 'V' U+0056 (utf-8: 56)
    [0x3f, 0x40, 0x38, 0x40, 0x3f],  # 055: 'W' U+0057 (utf-8: 57)
    [0x63, 0x14, 0x08, 0x14, 0x63],  # 056: 'X' U+0058 (utf-8: 58)
    [0x07, 0x08, 0x70, 0x08, 0x07],  # 057: 'Y' U+0059 (utf-8: 59)
    [0x61, 0x51, 0x49, 0x45, 0x43],  # 058: 'Z' U+005a (utf-8: 5a)
    [0x00, 0x7f, 0x41, 0x41, 0x00],  # 059: '[' U+005b (utf-8: 5b)
    [0x02, 0x04, 0x08, 0x10, 0x20],  # 060: '\' U+005c (utf-8: 5c)
    [0x00, 0x41, 0x41, 0x7f, 0x00],  # 061: ']' U+005d (utf-8: 5d)
    [0x04, 0x02, 0x01, 0x02, 0x04],  # 062: '^' U+005e (utf-8: 5e)
    [0x40, 0x40, 0x40, 0x40, 0x40],  # 063: '_' U+005f (utf-8: 5f)
    [0x00, 0x03, 0x05, 0x00, 0x00],  # 064: '`' U+0060 (utf-8: 60)
    [0x20, 0x54, 0x54, 0x54, 0x78],  # 065: 'a' U+0061 (utf-8: 61)
    [0x7f, 0x48, 0x44, 0x44, 0x38],  # 066: 'b' U+0062 (utf-8: 62)
    [0x38, 0x44, 0x44, 0x44, 0x20],  # 067: 'c' U+0063 (utf-8: 63)
    [0x38, 0x44, 0x44, 0x48, 0x7f],  # 068: 'd' U+0064 (utf-8: 64)
    [0x38, 0x54, 0x54, 0x54, 0x18],  # 069: 'e' U+0065 (utf-8: 65)
    [0x00, 0x04, 0x7e, 0x05, 0x01],  # 070: 'f' U+0066 (utf-8: 66)
    [0x08, 0x54, 0x54, 0x54, 0x3c],  # 071: 'g' U+0067 (utf-8: 67)
    [0x7f, 0x08, 0x04, 0x04, 0x78],  # 072: 'h' U+0068 (utf-8: 68)
    [0x00, 0x44, 0x7d, 0x40, 0x00],  # 073: 'i' U+0069 (utf-8: 69)
    [0x20, 0x40, 0x44, 0x3d, 0x00],  # 074: 'j' U+006a (utf-8: 6a)
    [0x00, 0x7f, 0x10, 0x28, 0x44],  # 075: 'k' U+006b (utf-8: 6b)
    [0x00, 0x41, 0x7f, 0x40, 0x00],  # 076: 'l' U+006c (utf-8: 6c)
    [0x7c, 0x04, 0x78, 0x04, 0x78],  # 077: 'm' U+006d (utf-8: 6d)
    [0x7c, 0x08, 0x04, 0x04, 0x78],  # 078: 'n' U+006e (utf-8: 6e)
    [0x38, 0x44, 0x44, 0x44, 0x38],  # 079: 'o' U+006f (utf-8: 6f)
    [0x7c, 0x14, 0x14, 0x14, 0x08],  # 080: 'p' U+0070 (utf-8: 70)
    [0x08, 0x14, 0x14, 0x14, 0x7c],  # 081: 'q' U+0071 (utf-8: 71)
    [0x7c, 0x08, 0x04, 0x04, 0x08],  # 082: 'r' U+0072 (utf-8: 72)
    [0x48, 0x54, 0x54, 0x54, 0x24],  # 083: 's' U+0073 (utf-8: 73)
    [0x04, 0x3e, 0x44, 0x40, 0x20],  # 084: 't' U+0074 (utf-8: 74)
    [0x3c, 0x40, 0x40, 0x20, 0x7c],  # 085: 'u' U+0075 (utf-8: 75)
    [0x0c, 0x30, 0x40, 0x30, 0x0c],  # 086: 'v' U+0076 (utf-8: 76)
    [0x3c, 0x40, 0x30, 0x40, 0x3c],  # 087: 'w' U+0077 (utf-8: 77)
    [0x44, 0x24, 0x38, 0x48, 0x44],  # 088: 'x' U+0078 (utf-8: 78)
    [0x44, 0x48, 0x30, 0x10, 0x0c],  # 089: 'y' U+0079 (utf-8: 79)
    [0x44, 0x64, 0x54, 0x4c, 0x44],  # 090: 'z' U+007a (utf-8: 7a)
    [0x08, 0x36, 0x41, 0x00, 0x00],  # 091: '[' U+007b (utf-8: 7b)
    [0x00, 0x00, 0x77, 0x00, 0x00],  # 092: '|' U+007c (utf-8: 7c)
    [0x00, 0x00, 0x41, 0x36, 0x08],  # 093: ']' U+007d (utf-8: 7d)
    [0x02, 0x01, 0x02, 0x04, 0x02],  # 094: '~' U+007e (utf-8: 7e)
    [0x04, 0x02, 0x01, 0x02, 0x04],  # 095: '^' U+005e (utf-8: 5e)
]

'''

    [0x3e, 0x51, 0x49, 0x45, 0x3e],  # 016: '0' U+0030 (utf-8: 30)
    [0x00, 0x42, 0x7f, 0x40, 0x00],  # 017: '1' U+0031 (utf-8: 31)
    [0x42, 0x61, 0x51, 0x49, 0x46],  # 018: '2' U+0032 (utf-8: 32)
    [0x21, 0x41, 0x45, 0x4b, 0x31],  # 019: '3' U+0033 (utf-8: 33)
    [0x18, 0x14, 0x12, 0x7f, 0x10],  # 020: '4' U+0034 (utf-8: 34)
    [0x27, 0x45, 0x45, 0x45, 0x39],  # 021: '5' U+0035 (utf-8: 35)
    [0x3c, 0x4a, 0x49, 0x49, 0x30],  # 022: '6' U+0036 (utf-8: 36)
    [0x01, 0x71, 0x09, 0x05, 0x03],  # 023: '7' U+0037 (utf-8: 37)
    [0x36, 0x49, 0x49, 0x49, 0x36],  # 024: '8' U+0038 (utf-8: 38)
    [0x06, 0x49, 0x49, 0x29, 0x1e],  # 025: '9' U+0039 (utf-8: 39)
    
    [0x00, 0x36, 0x36, 0x00, 0x00],  # 026: ':' U+003a (utf-8: 3a)
'''


def retrieve_glyph(character):
    r = []
    space = 5
    oc = ord(character)
    if 32 <= oc <= 127:
        ret = FONT_CASIO_OFFSET_32[oc - 32]
        for i, v in enumerate(ret):
            for j in range(8):
                if v & (1 << j):
                    r.append((i, j))
        space = len(ret)
    return r, space + 1

